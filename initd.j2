#!/bin/sh

### BEGIN INIT INFO
# Provides:		{{ component }}
# Required-Start:	$docker
# Required-Stop:	$docker
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Docker Services
### END INIT INFO

set -e

COMP={{ component }}
YAMLFILE={{ components_path }}/{{ component }}.yml
OPTS="-f $YAMLFILE"
UPOPTS="-d --no-recreate --no-build --no-deps"

. /lib/lsb/init-functions

case "$1" in
    start)
        log_daemon_msg "Starting Docker Compose" "dockercompose" || true
        docker-compose $OPTS up $UPOPTS
        ;;

    stop)
        log_daemon_msg "Stopping Docker Compose" "dockercompose" || true
        docker-compose $OPTS stop
        ;;

    reload)
        log_daemon_msg "Reloading Docker Compose" "dockercompose" || true
        docker-compose $OPTS up $UPOPTS
        ;;

    restart)
        docker-compose $OPTS stop
        docker-compose $OPTS up $UPOPTS
        ;;
    update)
        log_daemon_msg "Updating docker images" "dockercompose" || true
        aws s3 --region {{ region }} cp {{ yml_src }} /var/tmp/$COMP
        if [ ! -f $YAMLFILE ]; then
          mv -f /var/tmp/$COMP $YAMLFILE
          docker-compose $OPTS up $UPOPTS
        else 
          NEWMD5=$(md5sum /var/tmp/$COMP | awk '{print $1}')
          OLDMD5=$(md5sum $YAMLFILE | awk '{print $1}')
          if [ "$NEWMD5" != "$OLDMD5" ]; then
            docker-compose -f /var/tmp/$COMP pull
            docker-compose $OPTS stop
            docker-compose $OPTS rm -f
            mv -f /var/tmp/$COMP $YAMLFILE
            docker-compose $OPTS up $UPOPTS
          else
            rm -f /var/tmp/$COMP
          fi
        fi
        ;;
    *)
        log_action_msg "Usage: /etc/init.d/dockercompose {start|stop|restart|reload|update}" || true
        exit 1
        ;;
esac

exit 0
